{"version":3,"file":"index.es.js","sources":["../src/close-icon.js","../node_modules/style-inject/dist/style-inject.es.js","../src/modal.js"],"sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst CloseIcon = ({\n  classes,\n  classNames,\n  styles,\n  closeIconSize,\n  closeIconSvgPath,\n  onClickCloseIcon,\n}) => (\n  <button\n    className={cx(classes.closeButton, classNames.closeButton)}\n    style={styles.closeButton}\n    onClick={onClickCloseIcon}\n  >\n    <svg\n      className={cx(classes.closeIcon, classNames.closeIcon)}\n      style={styles.closeIcon}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={closeIconSize}\n      height={closeIconSize}\n      viewBox=\"0 0 36 36\"\n    >\n      {closeIconSvgPath}\n    </svg>\n  </button>\n);\n\nCloseIcon.propTypes = {\n  classNames: PropTypes.object.isRequired,\n  styles: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  closeIconSize: PropTypes.number.isRequired,\n  closeIconSvgPath: PropTypes.node.isRequired,\n  onClickCloseIcon: PropTypes.func.isRequired,\n};\n\nexport default CloseIcon;\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Portal from 'react-minimalist-portal';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport cx from 'classnames';\nimport noScroll from 'no-scroll';\nimport CloseIcon from './close-icon';\nimport cssClasses from './styles.css';\n\nlet scrollbarSize;\n\nclass Modal extends Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!prevState.showPortal && nextProps.open) {\n      return {\n        showPortal: true,\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPortal: props.open,\n    };\n    this.shouldClose = null;\n    this.scrollWidth = 15;\n  }\n\n  componentDidMount() {\n    var hasScrollbar = window.innerWidth > document.documentElement.clientWidth;\n\n    if (hasScrollbar)\n      this.scrollWidth = this.getScrollbarSize();\n    else\n      this.scrollWidth = 0;\n\n    if (this.props.open) {\n      this.handleOpen();\n    }\n  }\n\n    getScrollbarSize() {\n        if (typeof scrollbarSize !== 'undefined') return scrollbarSize;\n\n        var doc = document.documentElement;\n        var dummyScroller = document.createElement('div');\n        dummyScroller.setAttribute('style', 'width:99px;height:99px;' + 'position:absolute;top:-9999px;overflow:scroll;');\n        doc.appendChild(dummyScroller);\n        scrollbarSize = dummyScroller.offsetWidth - dummyScroller.clientWidth;\n        doc.removeChild(dummyScroller);\n        return scrollbarSize;\n    }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.showPortal && !this.state.showPortal) {\n      this.handleClose();\n    } else if (!prevProps.open && this.props.open) {\n      this.handleOpen();\n    }\n  }\n\n  componentWillUnmount() {\n    noScroll.off();\n    if (this.props.open) {\n      this.handleClose();\n    }\n  }\n\n  handleOpen = () => {\n    this.blockScroll();\n    document.addEventListener('keydown', this.handleKeydown);\n  };\n\n  handleClose = () => {\n    this.unblockScroll();\n    document.removeEventListener('keydown', this.handleKeydown);\n  };\n\n  handleClickOverlay = event => {\n    if (this.shouldClose === null) {\n      this.shouldClose = true;\n    }\n\n    if (!this.shouldClose) {\n      this.shouldClose = null;\n      return;\n    }\n\n    if (this.props.onOverlayClick) {\n      this.props.onOverlayClick(event);\n    }\n\n    if (this.props.closeOnOverlayClick) {\n      this.props.onClose(event);\n    }\n\n    this.shouldClose = null;\n  };\n\n  handleClickCloseIcon = event => {\n    this.props.onClose(event);\n  };\n\n  handleKeydown = event => {\n    if (event.keyCode !== 27) {\n      return;\n    }\n\n    if (this.props.onEscKeyDown) {\n      this.props.onEscKeyDown(event);\n    }\n\n    if (this.props.closeOnEsc) {\n      this.props.onClose(event);\n    }\n  };\n\n  handleModalEvent = () => {\n    this.shouldClose = false;\n  };\n\n  handleEntered = () => {\n    if (this.props.onEntered) {\n      this.props.onEntered();\n    }\n  };\n\n  handleExited = () => {\n    if (this.props.onExited) {\n      this.props.onExited();\n    }\n\n    this.setState({ showPortal: false });\n    this.unblockScroll();\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  blockScroll() {\n    var header = document.getElementById('header');\n    var shadowTable = document.getElementById('shadowTable');\n    var affected = document.querySelectorAll('[data-affectedbymodal=\"true\"]');\n    var hasScrollbar = window.innerWidth > document.documentElement.clientWidth;\n    if (hasScrollbar) this.scrollWidth = this.getScrollbarSize();\n    else this.scrollWidth = 0;\n      console.log(hasScrollbar, this.scrollWidth)\n    noScroll.on();\n    if (header) header.setAttribute('style', 'left: -' + this.scrollWidth + 'px !important');\n    if (shadowTable) {\n        if ((this.scrollWidth * -1) < 0) {\n          shadowTable.style.left = 'calc(50% - ' + this.scrollWidth + 'px)';\n        } else {\n          shadowTable.style.left = 'calc(50% - ' + (this.scrollWidth * -1) + 'px)';\n        }\n    }\n    if (affected && affected.length) {\n        for (var i = 0; i < affected.length; i++) {\n            affected[i].setAttribute('style', 'left: -' + this.scrollWidth + 'px !important');\n        }\n    }\n  }\n\n  unblockScroll = () => {\n    const openedModals = document.getElementsByClassName(\n      this.props.classes.modal\n    );\n    if (openedModals.length === 1) {\n      var header = document.getElementById('header');\n      var shadowTable = document.getElementById('shadowTable');\n      var affected = document.querySelectorAll('[data-affectedbymodal=\"true\"]');\n      var hasScrollbar = window.innerWidth > document.documentElement.clientWidth;\n      if (hasScrollbar) this.scrollWidth = this.getScrollbarSize();\n      else this.scrollWidth = 0;\n        console.log(hasScrollbar, this.scrollWidth)\n\n      noScroll.off();\n      if (header) header.setAttribute('style', 'left: 0px !important');\n      if (shadowTable) shadowTable.style.left = '50%';\n      if (affected && affected.length) {\n        for (var i = 0; i < affected.length; i++) {\n          affected[i].setAttribute('style', 'left: 0px !important');\n        }\n      }\n    }\n  };\n\n  render() {\n    const {\n      open,\n      center,\n      classes,\n      classNames,\n      styles,\n      showCloseIcon,\n      closeIconSize,\n      closeIconSvgPath,\n      animationDuration,\n    } = this.props;\n    const { showPortal } = this.state;\n\n    if (!showPortal) {\n      return null;\n    }\n\n    return (\n      <Portal>\n        <CSSTransition\n          in={open}\n          appear\n          classNames={{\n            appear: classNames.transitionEnter || classes.transitionEnter,\n            appearActive:\n              classNames.transitionEnterActive || classes.transitionEnterActive,\n            enter: classNames.transitionEnter || classes.transitionEnter,\n            enterActive:\n              classNames.transitionEnterActive || classes.transitionEnterActive,\n            exit: classNames.transitionExit || classes.transitionExit,\n            exitActive:\n              classNames.transitionExitActive || classes.transitionExitActive,\n          }}\n          timeout={animationDuration}\n          onEntered={this.handleEntered}\n          onExited={this.handleExited}\n        >\n          <div\n            className={cx(\n              classes.overlay,\n              center ? classes.overlayCenter : null,\n              classNames.overlay\n            )}\n            onClick={this.handleClickOverlay}\n            style={styles.overlay}\n          >\n            <div\n              className={cx(classes.modal, classNames.modal)}\n              style={styles.modal}\n              onMouseDown={this.handleModalEvent}\n              onMouseUp={this.handleModalEvent}\n              onClick={this.handleModalEvent}\n            >\n              {this.props.children}\n              {showCloseIcon && (\n                <CloseIcon\n                  classes={classes}\n                  classNames={classNames}\n                  styles={styles}\n                  closeIconSize={closeIconSize}\n                  closeIconSvgPath={closeIconSvgPath}\n                  onClickCloseIcon={this.handleClickCloseIcon}\n                />\n              )}\n            </div>\n          </div>\n        </CSSTransition>\n      </Portal>\n    );\n  }\n}\n\nModal.propTypes = {\n  /**\n   * Is the modal closable when user press esc key.\n   */\n  closeOnEsc: PropTypes.bool,\n  /**\n   * Is the modal closable when user click on overlay.\n   */\n  closeOnOverlayClick: PropTypes.bool,\n  /**\n   * Callback fired when the Modal is open and the animation is finished.\n   */\n  onEntered: PropTypes.func,\n  /**\n   * Callback fired when the Modal has exited and the animation is finished.\n   */\n  onExited: PropTypes.func,\n  /**\n   * Callback fired when the Modal is requested to be closed by a click on the overlay or when user press esc key.\n   */\n  onClose: PropTypes.func.isRequired,\n  /**\n   * Callback fired when the escape key is pressed.\n   */\n  onEscKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the overlay is clicked.\n   */\n  onOverlayClick: PropTypes.func,\n  /**\n   * Control if the modal is open or not.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * An object containing classNames to style the modal, can have properties 'overlay' (classname for overlay div), 'modal' (classname for modal content div), 'closeButton' (classname for the button that contain the close icon), 'closeIcon' (classname for close icon svg). You can customize the transition with 'transitionEnter', 'transitionEnterActive', 'transitionExit', 'transitionExitActive'\n   */\n  classNames: PropTypes.object,\n  /**\n   * An object containing the styles objects to style the modal, can have properties 'overlay', 'modal', 'closeButton', 'closeIcon'.\n   */\n  styles: PropTypes.object,\n  /**\n   * The content of the modal.\n   */\n  children: PropTypes.node,\n  /**\n   * @internal\n   */\n  classes: PropTypes.object,\n  /**\n   * Is the dialog centered (**when you don't have a lot of content**).\n   */\n  center: PropTypes.bool,\n  /**\n   * Show the close icon.\n   */\n  showCloseIcon: PropTypes.bool,\n  /**\n   * Close icon size.\n   */\n  closeIconSize: PropTypes.number,\n  /**\n   * A valid svg path to show as icon.\n   */\n  closeIconSvgPath: PropTypes.node,\n  /**\n   * Animation duration in milliseconds.\n   */\n  animationDuration: PropTypes.number,\n};\n\nModal.defaultProps = {\n  classes: cssClasses,\n  closeOnEsc: true,\n  closeOnOverlayClick: true,\n  onEntered: null,\n  onExited: null,\n  onEscKeyDown: null,\n  onOverlayClick: null,\n  showCloseIcon: true,\n  closeIconSize: 28,\n  closeIconSvgPath: (\n    <path d=\"M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z\" />\n  ),\n  classNames: {},\n  styles: {},\n  children: null,\n  center: false,\n  animationDuration: 500,\n};\n\npolyfill(Modal);\n\nexport default Modal;\n"],"names":["CloseIcon","classes","classNames","styles","closeIconSize","closeIconSvgPath","onClickCloseIcon","cx","closeButton","closeIcon","propTypes","PropTypes","object","isRequired","number","node","func","scrollbarSize","Modal","nextProps","prevState","showPortal","open","props","handleOpen","blockScroll","addEventListener","handleKeydown","handleClose","unblockScroll","removeEventListener","handleClickOverlay","shouldClose","onOverlayClick","event","closeOnOverlayClick","onClose","handleClickCloseIcon","keyCode","onEscKeyDown","closeOnEsc","handleModalEvent","handleEntered","onEntered","handleExited","onExited","setState","openedModals","document","getElementsByClassName","modal","length","header","getElementById","shadowTable","affected","querySelectorAll","hasScrollbar","window","innerWidth","documentElement","clientWidth","scrollWidth","getScrollbarSize","log","off","setAttribute","style","left","i","state","doc","dummyScroller","createElement","appendChild","offsetWidth","removeChild","prevProps","on","center","showCloseIcon","animationDuration","transitionEnter","transitionEnterActive","transitionExit","transitionExitActive","overlay","overlayCenter","children","Component","bool","defaultProps","cssClasses","polyfill"],"mappings":"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"}